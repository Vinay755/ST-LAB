TW: - 1 

Design and develop a program in a language of your choice to solve the
triangle problem defined as follows: Accept three integers which are
supposed to be the three sides of a triangle and determine if the three values
represent an equilateral triangle, isosceles triangle, scalene triangle, or they
do not form a triangle at all. Derive test cases for your program based on
decision-table approach, execute the test cases and discuss the results.


ALGORITHM:

Step 1: Input a, b & c i.e. three integer values which represent three sides of
the triangle.
Step 2: if (a < (b + c)) and (b < (a + c)) and (c < (a + b) then
do step 3
else
print not a triangle. do step 6.
Step 3: if (a=b) and (b=c) then
Print triangle formed is equilateral. do step 6.
Step 4: if (a ≠ b) and (a ≠ c) and (b ≠ c) then
Print triangle formed is scalene. do step 6.
Step 5: Print triangle formed is Isosceles.
Step 6: stop

#include<stdio.h>
int main()
{
int a,b,c;
char istriangle;
printf("Enter 3 integers which are sides of triangle\n");
scanf("%d%d%d",&a,&b,&c);
printf("a=%d\tb=%d\tc=%d",a,b,c);
// to check is it a triangle or not
if( a<b+c && b<a+c && c<a+b )
istriangle='y';
else
istriangle ='n';
// to check which type of triangle
if (istriangle=='y')
if ((a==b) && (b==c))
printf("\nIt is an Equilateral triangle\n");
else if ((a!=b) && (a!=c) && (b!=c))
printf("\nIt is a Scalene triangle\n");
 else
printf("\nIt is an Isosceles triangle\n");
else
printf("\nNot a triangle\n");
return 0;
}




TEST CASE 1 :
Enter three sides of the triangle: 10 10 10
Equilateral triangle

TEST CASE 2 :
Enter three sides of the triangle:  5 5 2
Isosceles triangle

TEST CASE 3 :
Enter three sides of the triangle: 10 9 5
Scalene triangle

TEST CASE 4 :
Enter three sides of the triangle: 10 5 5   Triangle cannot be formed
