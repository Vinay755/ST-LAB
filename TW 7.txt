TW :- 7

Design, develop, code and run the program in any suitable language to implement the quicksort algorithm. Determine the basis paths and using them derive different test cases, execute these test cases and discuss the test results. discuss the test results. 


PROGRAM CODE: 

#include<stdio.h>
void quick_sort(int a[100],int low,int high)
{
    int i,j,temp,key;
    if(low<high)
    {
        key=a[low];
        i=low;
        j=high;
//Partition the array into two parts
    while(i<=j)
    {
        while(key>=a[i])
        i++;
        while(key<a[j])
        j--;
        if(i<j)
        {
            temp=a[i];
            a[i]=a[j];
            a[j]=temp;
        }
    }
//partition completed
    temp=a[low];
    a[low]=a[j];
    a[j]=temp;
//Consider j as mid and cal recursive function.
    quick_sort(a,low,j-1);
    quick_sort(a,j+1,high);
    }
}
//Main Function
void main()
{
    int i,n,a[100];
    printf("Enter the value for n\n");
    scanf("%d",&n);

    printf("Enter %d Elements\t",n);
    for(i=0;i<n;i++)
        scanf("%d",&a[i]);
    quick_sort(a,0,n-1);
    printf("The Sorted array is\t");
    for(i=0;i<n;i++)
    printf("%d\t",a[i]);
}

Enter the size of the array : 9
9
Enter 9 elements :
23 5 32 63 12 1 7 65 99
Elements of the array are :
1 5 7 12 23 32 63 65 99

Enter the size of the array:  4
4
Enter 4 elements :
-3 21 3 32
Elements of the array are: 
-3 3 21 32 

